{
    "collab_server" : "",
    "contents" : "#library(shiny)\n#library(shinyFiles)\n#library(DLMtool)\nrequire(shiny)\nrequire(shinyFiles)\nrequire(DLMtool)\n\nsource('load_DLM.r',local = FALSE)\n\nshinyUI(fluidPage(\n  titlePanel(\"Applying the DLMtool\"),\n  sidebarLayout(\n   sidebarPanel(\n    fileInput('file1', 'Choose DLM input file',\n              accept = c(\n                'text/csv',\n                'text/comma-separated-values',\n                'text/tab-separated-values',\n                'text/plain',\n                '.csv','tmp'\n              )\n    #actionButton(\"resetdata\",\"Flush data file before loading new file\")          \n    ),\n  conditionalPanel(\n    condition=\"input.conditionedPanels==3\",wellPanel(uiOutput(\"choicelist\")),\n    fluidRow(column(3,numericInput(\"TACreps\", \"# of replicates\", value=100,min=1, max=1000000, step=1))),\n    actionButton(\"selectall\",\"Select All\"), \n    actionButton(\"run_dlm\",\"Run catch estimates\",icon(\"play-circle\"),style=\"font-size:110%;border:2px solid;background:#ffffcc\")\n  ),\n\nconditionalPanel(\n  condition=\"input.conditionedPanels==4\",wellPanel(uiOutput(\"sensilist\")),\n  fluidRow(column(6,numericInput(\"nsensi\", \"# of total sensitivty values explored\", value=6,min=1, max=100, step=1)),column(6,numericInput(\"sensireps\", \"# of samples used for sensitivity\", value=100,min=1, max=100000, step=1))),\n  fluidRow(column(6,numericInput(\"lowperc\", \"Lower percentile reported\", value=0.05,min=0, max=1, step=0.01)),column(6,numericInput(\"upperperc\", \"Upper percentile reported\", value=0.95,min=0, max=1, step=0.01)))\n),\n\n\n  conditionalPanel(\n    condition=\"input.conditionedPanels==5\",\n    h3(\"Select control methods to test in MSE\"), \n    fluidRow(column(6,wellPanel(uiOutput(\"can.list.output\"))),column(6,wellPanel(uiOutput(\"can.list.input\")))),\n    fluidRow(column(6,actionButton(\"allselect\",\"Select All output methods\")),column(6,actionButton(\"selectinput\",\"Select all input methods\"))),\n    br(),\n    br(),\n    fluidRow(column(6,wellPanel(uiOutput(\"cant.list.output\"))),column(6,wellPanel(uiOutput(\"cant.list.input\")))),\n    fluidRow(column(6,actionButton(\"allselectNAop\",\"Select All output methods\")),column(6,actionButton(\"allselectNAip\",\"Select all input methods\"))),\n    br(),\n    h3(\"Plotting MSE output\"),\n    fluidRow(column(12,wellPanel(uiOutput(\"subMPs\"),\n    fluidRow(column(6,numericInput(\"Kplotmaxsim\", \"Kobe plot: max # of sims to plot\", value=60,min=0, max=10000, step=1))),\n    fluidRow(column(6,numericInput(\"VOInvars\", \"VOI plot: # of variables to show\", value=5,min=0, max=20, step=1)),column(6,numericInput(\"VOInMPs\", \"VOI plot: # of MPs to plot\", value=4,min=0, max=100, step=1))),\n    p(\"Note: VOI plot will only show up to the first 4 methods\")))),\n    \n    br(),\n    \n    h3(\"Build the Operating Model\"), \n    \n    wellPanel(fluidRow(column(12, uiOutput(\"stock.choicelist\"))),\n    h4(\"User modifications\"), \n    fluidRow(column(6, actionButton(\"zerogradients\",\"Zero all gradient values?\"))),\n    fluidRow(column(6, uiOutput(\"stock.maxage\"))),\n    fluidRow(column(4, uiOutput(\"stock.M\")),column(4, uiOutput(\"stock.Msd\")),column(4, uiOutput(\"stock.Mgrad\"))),\n    fluidRow(column(4, uiOutput(\"stock.Linf\")),column(4, uiOutput(\"stock.Linfsd\")),column(4, uiOutput(\"stock.Linfgrad\"))),\n    fluidRow(column(4, uiOutput(\"stock.K\")),column(4, uiOutput(\"stock.Ksd\")),column(4, uiOutput(\"stock.Kgrad\"))),\n    fluidRow(column(6, uiOutput(\"stock.t0\"))),\n    fluidRow(column(6, uiOutput(\"stock.WtLt_a\")),column(6, uiOutput(\"stock.WtLt_b\"))),\n    fluidRow(column(6, uiOutput(\"stock.R0\")),column(6, uiOutput(\"stock.SRrel\"))),\n    fluidRow(column(6, uiOutput(\"stock.h\")),column(6, uiOutput(\"stock.recgrad\"))),\n    fluidRow(column(6, uiOutput(\"stock.Perr\")),column(6, uiOutput(\"stock.AC\"))),\n    fluidRow(column(6, uiOutput(\"stock.L50\")),column(6, uiOutput(\"stock.L50_95\"))),\n    fluidRow(column(6, uiOutput(\"stock.Size_area\")),column(6, uiOutput(\"stock.Frac_area\"))),\n    fluidRow(column(6, uiOutput(\"stock.Prob_staying\")),column(6, uiOutput(\"stock.D\")))\n    ),\n\n    wellPanel(fluidRow(column(12, uiOutput(\"fleet.choicelist\"))),\n    h4(\"User modifications\"), \n    fluidRow(column(6, uiOutput(\"fleet.nyrs\")),column(6, uiOutput(\"fleet.spattarg\"))),\n    fluidRow(column(6, uiOutput(\"fleet.L5\")),column(6, uiOutput(\"fleet.LFS\"))),\n    fluidRow(column(6, uiOutput(\"fleet.Vmaxlen\")),column(6, uiOutput(\"fleet.Fsd\"))),\n    fluidRow(column(6, uiOutput(\"fleet.qinc\")),column(6, uiOutput(\"fleet.qcv\")))),\n    \n    wellPanel(fluidRow(column(12, uiOutput(\"obs.choicelist\"))),\n    h4(\"User modifications\"), \n    h5(em(\"Bias and error entries in lognormal std. dev.\")), \n    fluidRow(column(6, uiOutput(\"Obs.rcv\")),column(6, uiOutput(\"Obs.maxagecv\"))),\n    fluidRow(column(6, uiOutput(\"Obs.Mcv\")),column(6, uiOutput(\"Obs.hcv\"))),\n    fluidRow(column(6, uiOutput(\"Obs.Linfcv\")),column(6, uiOutput(\"Obs.Kcv\"))),\n    fluidRow(column(6, uiOutput(\"Obs.t0cv\")),column(6, uiOutput(\"Obs.LenMcv\"))),\n    fluidRow(column(6, uiOutput(\"Obs.Reccv\")),column(6, uiOutput(\"Obs.FMSYcv\"))),\n    fluidRow(column(6, uiOutput(\"Obs.FMSY_Mcv\")),column(6, uiOutput(\"Obs.BMSY_B0cv\"))),\n    fluidRow(column(6, uiOutput(\"Obs.Fcurbiascv\")),column(6, uiOutput(\"Obs.Fcurcv\"))),\n    fluidRow(column(6, uiOutput(\"Obs.LFCcv\")),column(6, uiOutput(\"Obs.LFScv\"))),\n    fluidRow(column(6, uiOutput(\"Obs.Cobs\")),column(6, uiOutput(\"Obs.Cbiascv\"))),\n    fluidRow(column(6, uiOutput(\"Obs.CAA_nsamp\")),column(6, uiOutput(\"Obs.CAA_ESS\"))),\n    fluidRow(column(6, uiOutput(\"Obs.CAL_nsamp\")),column(6, uiOutput(\"Obs.CAL_ESS\"))),\n    fluidRow(column(6, uiOutput(\"Obs.CALcv\")),column(6, uiOutput(\"Obs.beta\"))),\n    fluidRow(column(6, uiOutput(\"Obs.Iobs\")),column(6, uiOutput(\"Obs.Icv\"))),\n    fluidRow(column(6, uiOutput(\"Obs.Dbiascv\")),column(6, uiOutput(\"Obs.Dcv\"))),\n    fluidRow(column(6, uiOutput(\"Obs.B0cv\")),column(6, uiOutput(\"Obs.Btcv\"))),\n    fluidRow(column(6, uiOutput(\"Obs.Btbias\")),column(6, uiOutput(\"Obs.Irefcv\"))),\n    fluidRow(column(6, uiOutput(\"Obs.Brefcv\")),column(6, uiOutput(\"Obs.Crefcv\")))),\n    #Get MSE specifications\n    wellPanel(h4(\"MSE specifications\"), \n    fluidRow(column(6,numericInput(\"Projyears\", \"# of projection years\", value=20,min=1, max=1000, step=1)),column(6,numericInput(\"MSE_intervals\", \"Intervals of method application\", value=5,min=1, max=200, step=1))),\n    fluidRow(column(6,numericInput(\"numsims\", \"# of simulations\", value=10,min=1, max=1000, step=1)),column(6, numericInput(\"reps\", \"Repetitions\", value=1,min=1, max=100, step=1))),\n    fluidRow(column(6,numericInput(\"pstar\", \"P* quantile\", value=0.5,min=0, max=0.5, step=0.01)))\n    ),\n    tags$head(tags$style(HTML('#run{background-color:orange}'))),\n    actionButton(\"run_dlm_MSE\",strong(\"Run MSE\"),width=\"100%\" ,icon(\"play-circle\"),style=\"font-size:120%;border:2px solid;background:#ccffcc\")\n    )\n#End of sidebarPanel\n   ),\n\n    mainPanel(\n      tabsetPanel(\n        tabPanel(\n          \"Checking inputs\",\n          column(6,plotOutput(\"Catchplot\")),\n          column(6,plotOutput(\"Indexplot\")),\n          column(6,plotOutput(\"LHplots\")),\n          column(6,plotOutput(\"Parameterplots\")),value=1\n        ),\n        tabPanel(\n          \"Unavailable methods\", verbatimTextOutput(\"MP_NA\"), value =2\n        ),\n        tabPanel(\n        \"TAC estimators\",plotOutput(\"TACplots\"),plotOutput(\"wtedTAC\"),\n        downloadButton('downloadTAC', 'Download TAC values'),\n        downloadButton('downloadTACobj', 'Download TAC R object'),\n        downloadButton('downloadTACbarplot', 'Download TAC barplot'),\n        downloadButton('downloadTACdensityplot', 'Download TAC denisty plot'),\n        value=3\n        ),\n        tabPanel(\n          \"TAC sensitivities\",column(12,plotOutput(\"Sensiplot\",height = 800, width = 1000)),\n          column(2,downloadButton('downloadSensi', 'Download plots')),\n          value=4\n        ),\n        tabPanel(\n          \"Management Strategy Evaluation\",\n          tabPanel(\"Tab1\", uiOutput(\"MSEplots\")),\n          #verbatimTextOutput(\"MPtest\"),\n#          plotOutput(\"MSE_TO1_plot1\"), \n#          plotOutput(\"MSE_TO1_plot2\"), \n          value=5\n        ), id=\"conditionedPanels\"\n        \n      )    \n  #End of mainPanel\n  )\n    )\n      ))",
    "created" : 1470787555439.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4259404305",
    "id" : "CCF40DFD",
    "lastKnownWriteTime" : 1472688845,
    "last_content_update" : 1472688845142,
    "path" : "D:/JMC/Documents/GitHub/Data-limited tools/Shiny_DLMtool/ui.R",
    "project_path" : "ui.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}